{
    "info": {
      "_postman_id": "from-remote-orders",
      "name": "systemTest - fromRemoteArray",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "name": "Order #46FFB2B5 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                ""
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"46FFB2B5\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"6313034594457\",\n    \"creditCardExpiry\": \"02/25\",\n    \"cvv\": \"301\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/calcDeliveryPathAsGeoJson",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "calcDeliveryPathAsGeoJson"
            ]
          }
        }
      },
      {
        "name": "Order #46FFB2B5 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"46FFB2B5\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"6313034594457\",\n    \"creditCardExpiry\": \"02/25\",\n    \"cvv\": \"301\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0022FA22 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0022FA22\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720308831536349\",\n    \"creditCardExpiry\": \"10/03\",\n    \"cvv\": \"140\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #53EBCF8C - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"53EBCF8C\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5254621573659815\",\n    \"creditCardExpiry\": \"02/25\",\n    \"cvv\": \"8878\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #415E4C7D - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"415E4C7D\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2591,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4751821104736246\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"856\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3AEC346E - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3AEC346E\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4548596670075231\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"011\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0C0E1B4A - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0C0E1B4A\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4727344239069889\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"169\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #377B813F - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"377B813F\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 3900,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5101762901820623\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"957\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7D979552 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7D979552\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4591688805012464\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"141\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #72B5894B - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"72B5894B\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4493213450963892\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"930\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #18EE2E7F - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"18EE2E7F\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720786228823190\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"043\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4D07E858 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4D07E858\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"1587427\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"725\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6EA9733A - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6EA9733A\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5355546045098367\",\n    \"creditCardExpiry\": \"15/11\",\n    \"cvv\": \"606\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4C41076A - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4C41076A\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4475513870418159\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"3061\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7D456751 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7D456751\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2433,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5409599246152737\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"305\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #119EEFF2 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"119EEFF2\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5339811036483270\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"588\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5B181A81 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5B181A81\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5320312029731511\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"781\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #72C9A3DC - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"72C9A3DC\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 3800,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4038549532985326\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"366\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5FF77CFD - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5FF77CFD\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 1100,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5273962581182631\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"781\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #42668F36 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"42668F36\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2700,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4027848426219435\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"995\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #53B8F302 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"53B8F302\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4240701026087242\",\n    \"creditCardExpiry\": \"02/25\",\n    \"cvv\": \"787\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #083D3268 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"083D3268\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"195\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #75B03698 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"75B03698\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4283633706112586\",\n    \"creditCardExpiry\": \"17/09\",\n    \"cvv\": \"498\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6B0E314A - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6B0E314A\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4167425945503837\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"3\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #33625182 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"33625182\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 3162,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5565024572231583\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"031\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #05CE030A - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"05CE030A\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 498705480,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4306220212446550\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"754\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7ADEC46B - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7ADEC46B\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5302829480043666\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"080\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5D9EB8D3 - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5D9EB8D3\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 3800,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4734813140668717\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"471\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1DBC6317 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1DBC6317\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 1100,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5257492283346565\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"070\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1479B9EA - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1479B9EA\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2700,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4563085142345125\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"095\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2680D804 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2680D804\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4090646218548207\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"523\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #66D9F030 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"66D9F030\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"7602614273\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"102\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2233E901 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2233E901\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4736571550125226\",\n    \"creditCardExpiry\": \"14/16\",\n    \"cvv\": \"417\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2574B58B - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2574B58B\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720450316074543\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"5\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7614A879 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7614A879\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2773,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4392885812450676\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"000\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #48F514BC - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"48F514BC\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 498705380,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4644900296064731\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"710\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #11F26BBD - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"11F26BBD\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5196694297641691\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"486\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #440A668C - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"440A668C\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 3900,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5521674484101267\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"413\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2F0B68F9 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2F0B68F9\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720027744646538\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"778\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #76B8D142 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"76B8D142\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5364756721088975\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"351\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #29269772 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"29269772\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5156770955597736\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"956\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #40D3E3E6 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"40D3E3E6\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"49749486\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"809\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6F6F05D8 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6F6F05D8\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5293413983519364\",\n    \"creditCardExpiry\": \"10/14\",\n    \"cvv\": \"523\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #629B5FD0 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"629B5FD0\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4620614689852796\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"74908\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5720D4F1 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5720D4F1\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 3011,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720252880221819\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"311\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #767BDF4D - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"767BDF4D\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4474035933597473\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"565\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #03D39F5C - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"03D39F5C\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5452802170623533\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"038\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0C5EDD0E - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0C5EDD0E\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 3400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4178832782927259\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"005\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #010EF975 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"010EF975\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5118939051158084\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"583\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3F6FBB10 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3F6FBB10\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4697293686624264\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"171\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #33DEF8C5 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"33DEF8C5\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4412894388375313\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"068\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1040E838 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1040E838\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"62\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"718\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #13DECFCA - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"13DECFCA\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4448615008236538\",\n    \"creditCardExpiry\": \"07/12\",\n    \"cvv\": \"348\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4DE8E4DB - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4DE8E4DB\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4717192179748133\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"62229\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #370CF3F3 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"370CF3F3\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2555,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4015489043009265\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"014\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2F393BF9 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2F393BF9\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4267449125925759\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"554\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3C8D308F - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3C8D308F\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4898890220136213\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"872\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #064AD31E - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"064AD31E\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 3400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720214954343390\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"915\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4925A631 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4925A631\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5176821440344220\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"417\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #49E72CE9 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"49E72CE9\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5186359602512753\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"156\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #72E149DA - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"72E149DA\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5356550683764552\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"127\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4CC016FA - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4CC016FA\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"778550\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"985\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0C950F51 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0C950F51\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4159471662991268\",\n    \"creditCardExpiry\": \"11/09\",\n    \"cvv\": \"796\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1DADA917 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1DADA917\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5513260830938287\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"39\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #250E67DA - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"250E67DA\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 3553,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4815550533089505\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"583\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #27C92DD4 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"27C92DD4\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 498705380,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4608383861298691\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"251\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #65FF147F - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"65FF147F\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5277990192165204\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"756\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #212B603A - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"212B603A\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 3400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4534991554829165\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"268\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #72CDE1B5 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"72CDE1B5\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720893040342662\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"553\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #24C08416 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"24C08416\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4980760348314217\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"595\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #11F9032A - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"11F9032A\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5274636427309256\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"573\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0357033F - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0357033F\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"1578226\",\n    \"creditCardExpiry\": \"02/25\",\n    \"cvv\": \"938\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1A9D65B0 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1A9D65B0\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5514900908126823\",\n    \"creditCardExpiry\": \"12/16\",\n    \"cvv\": \"574\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #44496FCE - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"44496FCE\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5179348619686014\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"210581\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5949239B - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5949239B\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 3152,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4587035068727147\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"256\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2ECBC0D1 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2ECBC0D1\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 498705380,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4323114583535928\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"349\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7A575162 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7A575162\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5171460024219147\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"099\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #546F77CE - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"546F77CE\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 3400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5242757691550521\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"493\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7F51B501 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7F51B501\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4464954044276276\",\n    \"creditCardExpiry\": \"02/25\",\n    \"cvv\": \"735\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0B62FBF3 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0B62FBF3\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2700,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4639536858323367\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"623\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1B05496A - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1B05496A\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5192982837162219\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"140\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #36D0CF0A - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"36D0CF0A\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"82989425644\",\n    \"creditCardExpiry\": \"02/25\",\n    \"cvv\": \"628\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #06DA1F8E - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"06DA1F8E\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4913341720952676\",\n    \"creditCardExpiry\": \"02/12\",\n    \"cvv\": \"285\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #31F6DFF2 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"31F6DFF2\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4450226968360592\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"945726\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6C15F2E1 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6C15F2E1\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2927,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720329695087948\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"120\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0860A474 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0860A474\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5207883636101312\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"052\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2A9C618A - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2A9C618A\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5287965196103193\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"906\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #247175BC - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"247175BC\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 3800,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5399281625975929\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"715\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4DA1CE72 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4DA1CE72\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 1100,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4498755981950710\",\n    \"creditCardExpiry\": \"02/25\",\n    \"cvv\": \"877\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #62A43041 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"62A43041\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4020505042848214\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"407\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #14A2978A - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"14A2978A\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4862247428147116\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"780\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #77DEDDE5 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"77DEDDE5\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"8814904\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"134\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #03D5F4C0 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"03D5F4C0\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4528173894977123\",\n    \"creditCardExpiry\": \"18/11\",\n    \"cvv\": \"094\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4DABDF9B - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4DABDF9B\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5101925144969123\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"19\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #19564369 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"19564369\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2598,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5102036576387138\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"232\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7ABAA3BA - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7ABAA3BA\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 498705480,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4355373646749550\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"493\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3A5F3E61 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3A5F3E61\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4051654393339043\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"988\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #647DB9A6 - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"647DB9A6\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 3800,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4684304412569924\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"560\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2DEE6DE1 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2DEE6DE1\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 1100,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4395628942407696\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"664\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #22DFA130 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"22DFA130\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4780427522392367\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"951\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2224A4E1 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2224A4E1\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5523416772983172\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"529\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #16717F4B - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"16717F4B\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"944003811\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"563\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #21BF527D - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"21BF527D\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4174280002415180\",\n    \"creditCardExpiry\": \"15/08\",\n    \"cvv\": \"879\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2A5C1431 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2A5C1431\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4701467725626167\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"95146\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6B25C92F - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6B25C92F\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 3035,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5165314927588470\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"453\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #318320A3 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"318320A3\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4249339082944120\",\n    \"creditCardExpiry\": \"02/25\",\n    \"cvv\": \"617\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4894D7FB - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4894D7FB\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 6500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5523873221822817\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"383\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7861392F - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7861392F\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 3900,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5334039031274560\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"064\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4AF7042A - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4AF7042A\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4430006298876029\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"536\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #07D82DA3 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"07D82DA3\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4747453738045823\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"439\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7E225429 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7E225429\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5312521109290145\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"819\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #10FF3678 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"10FF3678\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5499\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"788\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0F344ED1 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0F344ED1\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4023125393504329\",\n    \"creditCardExpiry\": \"06/13\",\n    \"cvv\": \"123\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #22A6CD77 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"22A6CD77\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4754035929245757\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"16\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #52229CE8 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"52229CE8\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2649,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4639232130646748\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"468\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0B00FD40 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0B00FD40\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4660451891178327\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"336\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #46A30E07 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"46A30E07\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4657372507456607\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"583\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #711A2FC7 - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"711A2FC7\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 3400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4522270621220540\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"229\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #331AE066 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"331AE066\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720495372314523\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"698\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #207120DD - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"207120DD\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720419575748634\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"926\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #417A3622 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"417A3622\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221610305119021\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"840\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #07F99219 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"07F99219\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2614\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"861\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #42FB3893 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"42FB3893\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4782529506531122\",\n    \"creditCardExpiry\": \"15/15\",\n    \"cvv\": \"493\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #36EDE83B - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"36EDE83B\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5100480221915152\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"502909\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #689F159C - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"689F159C\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2850,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5118188132698011\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"358\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4FC67022 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4FC67022\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4209456605377006\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"680\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #593ACCF6 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"593ACCF6\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4348719776391227\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"786\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0A4ACE72 - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0A4ACE72\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 3900,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5103612483193790\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"772\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #596A0D21 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"596A0D21\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720391704697695\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"793\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #50403313 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"50403313\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221605189229839\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"327\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0E1F957A - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0E1F957A\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5311644698260310\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"542\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0AF1CB2F - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0AF1CB2F\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"6\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"251\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1E3845F3 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1E3845F3\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5471578293693028\",\n    \"creditCardExpiry\": \"15/12\",\n    \"cvv\": \"149\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6EADE4B3 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6EADE4B3\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5408351562699193\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"74\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #11F4D03A - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"11F4D03A\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 3282,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4716002279044021\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"989\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7D599F5C - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7D599F5C\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5541193285137061\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"475\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0AA12609 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0AA12609\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 6500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4758954572311516\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"456\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #515B90EB - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"515B90EB\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 3600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5357386098166748\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"134\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1C49D244 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1C49D244\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5475061273253671\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"149\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2EDDB274 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2EDDB274\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5588973211510976\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"008\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #29820FC0 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"29820FC0\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5444312033160088\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"578\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1C217200 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1C217200\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"405757\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"652\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #629636CE - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"629636CE\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4922857516049558\",\n    \"creditCardExpiry\": \"06/11\",\n    \"cvv\": \"574\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3F4FCF07 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3F4FCF07\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5311426140585977\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"5943\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3672B9CE - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3672B9CE\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2968,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4448417126451226\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"492\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7A4CCBFD - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7A4CCBFD\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4551739261648164\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"757\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #02023A5C - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"02023A5C\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221441409032872\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"692\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0E30249A - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0E30249A\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 3400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4011484073450210\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"080\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #055E3642 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"055E3642\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5279763524631005\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"676\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #71F321DD - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"71F321DD\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221845909812353\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"903\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1A6CA6E9 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1A6CA6E9\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4346488840497335\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"720\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #35090B7C - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"35090B7C\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"905497\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"451\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0ED36C1F - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0ED36C1F\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5319528585791390\",\n    \"creditCardExpiry\": \"06/16\",\n    \"cvv\": \"728\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6176D7C6 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6176D7C6\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4930802221925460\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"960253\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5D4FA8C1 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5D4FA8C1\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2817,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720251095111419\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"952\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1BF3D0EA - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1BF3D0EA\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5354481262888525\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"669\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #656A5014 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"656A5014\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5241096750910289\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"819\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4FD293CF - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4FD293CF\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 3800,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4583631030905680\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"970\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #518312A7 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"518312A7\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 1100,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5155133679598764\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"753\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #45DA3B26 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"45DA3B26\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4178338476974961\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"093\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #00EDFB4B - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"00EDFB4B\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5576895443057548\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"442\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #46C4B076 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"46C4B076\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"7\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"706\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #24406FE0 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"24406FE0\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5372960487267530\",\n    \"creditCardExpiry\": \"11/18\",\n    \"cvv\": \"914\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1E02BC25 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1E02BC25\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5489268699841013\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"387280\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #68B1537D - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"68B1537D\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2874,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4714817439187721\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"937\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0AFCD104 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0AFCD104\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4144401210713730\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"050\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #45FB67F3 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"45FB67F3\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5252635237781957\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"868\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0A136DE7 - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0A136DE7\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 3800,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720986962806951\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"029\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1B071747 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1B071747\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 1100,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4743385196923808\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"662\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1669BDF7 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1669BDF7\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4894604553192147\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"873\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2B3ED4FE - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2B3ED4FE\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4912928626988530\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"992\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #665CDEA6 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"665CDEA6\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"57108744312462\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"873\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2C85D053 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2C85D053\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4010443529077564\",\n    \"creditCardExpiry\": \"14/08\",\n    \"cvv\": \"707\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2D8520BB - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2D8520BB\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4770992193247176\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"3214256\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #23B6B790 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"23B6B790\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2649,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4959411610503395\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"520\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #190F5CC2 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"190F5CC2\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5526026418650361\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"068\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #358142C4 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"358142C4\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4698827233329973\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"691\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #459A64E5 - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"459A64E5\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 3900,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4506811462078081\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"027\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3A08EB35 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3A08EB35\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720877678547155\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"002\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6736B62D - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6736B62D\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2700,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720787246512997\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"146\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #554C4646 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"554C4646\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4885746644102527\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"413\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #64CAB23B - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"64CAB23B\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"14\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"070\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6E27646A - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6E27646A\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4339349711652441\",\n    \"creditCardExpiry\": \"06/15\",\n    \"cvv\": \"202\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3F55CC4F - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3F55CC4F\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5203134570747304\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"5955\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #01C69F75 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"01C69F75\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2406,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4590801506373314\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"450\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3FFAC04F - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3FFAC04F\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720858936541842\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"485\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6F7C62EE - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6F7C62EE\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4884967256070791\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"094\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #38612DC4 - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"38612DC4\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 3900,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4235089337762753\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"704\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #772F8676 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"772F8676\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4105682815822763\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"012\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #676A2F95 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"676A2F95\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720008739931689\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"444\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1EE16F4C - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1EE16F4C\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5549337824281078\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"858\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6AEBF0AD - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6AEBF0AD\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"6\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"987\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4EE02F47 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4EE02F47\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4998425408205974\",\n    \"creditCardExpiry\": \"08/12\",\n    \"cvv\": \"626\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #713FA650 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"713FA650\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5371158294060062\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"6948\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #12249EE3 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"12249EE3\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2694,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5200256684577559\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"271\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4A654618 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4A654618\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720175038423922\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"369\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #45A6A158 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"45A6A158\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5170645234416670\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"675\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #052ED11A - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"052ED11A\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 3400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4254480083066885\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"994\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #67778483 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"67778483\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4636289773970432\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"983\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2120946D - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2120946D\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4800482676049616\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"268\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #49676FA5 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"49676FA5\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4623245252577432\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"878\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4CCBB159 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4CCBB159\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"12516286\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"430\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2224CDF5 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2224CDF5\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4986985740973633\",\n    \"creditCardExpiry\": \"09/05\",\n    \"cvv\": \"562\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6EECB036 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6EECB036\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4456012665942526\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"2711\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1DA914BA - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1DA914BA\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 3314,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221263963190429\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"691\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1503E112 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1503E112\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5331943623738168\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"038\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #602524BA - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"602524BA\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5359883918726998\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"341\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #36ED9B75 - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"36ED9B75\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 3900,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4825970497808690\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"234\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #07B5B16A - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"07B5B16A\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5199966486566864\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"776\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0E940B77 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0E940B77\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4000705099342079\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"439\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #79585332 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"79585332\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221818764207860\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"234\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #233CB255 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"233CB255\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"3751327707\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"184\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0248DDDC - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0248DDDC\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4532322212395112\",\n    \"creditCardExpiry\": \"02/12\",\n    \"cvv\": \"020\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2BB57D5F - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2BB57D5F\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4465659006106648\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"9778\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1CC1DEF1 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1CC1DEF1\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2404,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4484514544227231\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"260\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3A637A54 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3A637A54\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5124731185869500\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"425\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2D95007B - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2D95007B\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5236232438501300\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"391\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6A255247 - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6A255247\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 3900,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221744566427060\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"014\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #01CBF4E7 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"01CBF4E7\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4189188950969657\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"960\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #19F8B6E7 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"19F8B6E7\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5496144615064967\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"830\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #423453E7 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"423453E7\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5399138637052156\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"915\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5FFD6AEC - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5FFD6AEC\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"766254132807409\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"817\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #477030DA - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"477030DA\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5552022482752552\",\n    \"creditCardExpiry\": \"14/11\",\n    \"cvv\": \"653\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #12259D72 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"12259D72\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4745324063280537\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"5684\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #20D043E7 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"20D043E7\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 3106,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4192904816410487\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"134\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #16189820 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"16189820\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 498705480,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720904501487332\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"934\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #17C56AFB - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"17C56AFB\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720962615263593\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"672\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #51B5E523 - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"51B5E523\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 4000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5469120923749641\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"840\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #627B5806 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"627B5806\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 1100,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5133209259184469\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"041\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #13C83517 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"13C83517\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2700,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221012907087963\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"341\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #72157EBA - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"72157EBA\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4383351310911496\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"336\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4DB4AB4B - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4DB4AB4B\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"204589183828631\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"934\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #322AFE69 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"322AFE69\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4323821300476216\",\n    \"creditCardExpiry\": \"06/09\",\n    \"cvv\": \"492\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #563BAB7B - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"563BAB7B\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4834530139862346\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"5409167\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5002051A - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5002051A\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2998,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4799441725563673\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"343\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2C8FB0A1 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2C8FB0A1\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5202082231062053\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"521\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1B266114 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1B266114\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5188197988253826\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"832\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6D7CA535 - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6D7CA535\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 4000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4821949462898419\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"804\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #559987C8 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"559987C8\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 1100,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720482252512731\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"574\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1ABCD661 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1ABCD661\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2700,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4236010724320293\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"435\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7FE78528 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7FE78528\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4401732192885288\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"800\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #53C15216 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"53C15216\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"66\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"766\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #09950FE6 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"09950FE6\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720024930272757\",\n    \"creditCardExpiry\": \"08/12\",\n    \"cvv\": \"395\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #63DC82BF - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"63DC82BF\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4278705877430877\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"6866\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #645ACDF2 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"645ACDF2\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2852,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720092690891041\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"997\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #77663A42 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"77663A42\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 498705380,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5455016907513886\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"812\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7E55F36B - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7E55F36B\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4653509598304287\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"499\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #71226202 - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"71226202\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 3400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5161541542995474\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"771\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #585E89F1 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"585E89F1\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5439697568058492\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"295\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #672EF8AF - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"672EF8AF\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4416405981470751\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"121\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #130200DC - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"130200DC\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5536021566752851\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"634\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4533D118 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4533D118\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"688824974\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"243\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #63BD89B7 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"63BD89B7\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4782666479704706\",\n    \"creditCardExpiry\": \"13/17\",\n    \"cvv\": \"934\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #06AB35E7 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"06AB35E7\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221061873691795\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"3732\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #13CD474C - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"13CD474C\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 3180,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4187927421198012\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"957\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #19A0F597 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"19A0F597\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 498705380,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720272236746145\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"712\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #59DA226F - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"59DA226F\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4809956618211559\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"201\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2B96EA5D - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2B96EA5D\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 3400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4504749375857583\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"157\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #52448C8E - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"52448C8E\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221416058040285\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"558\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7EF99D85 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7EF99D85\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4537944694324800\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"177\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4733FC68 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4733FC68\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4552868375703158\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"501\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #47106D36 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"47106D36\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"873599\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"446\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #253C8EEC - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"253C8EEC\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4714473009382464\",\n    \"creditCardExpiry\": \"03/16\",\n    \"cvv\": \"653\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3E58F7B6 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3E58F7B6\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5575547935196570\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"8364\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #18455618 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"18455618\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2366,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221233317930168\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"438\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5DA0EDEC - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5DA0EDEC\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4139171060940512\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"121\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #73213955 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"73213955\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 6500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5472584458679306\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"004\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4E56B4FF - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4E56B4FF\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 3900,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221374940092974\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"705\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7DA21A23 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7DA21A23\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5201231165904175\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"306\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3244E73F - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3244E73F\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4883157419462413\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"645\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0AEA5843 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0AEA5843\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5236776288719107\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"506\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4E296837 - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4E296837\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"38065975381\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"016\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4FDDDF72 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4FDDDF72\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4619863421134426\",\n    \"creditCardExpiry\": \"19/02\",\n    \"cvv\": \"517\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #00EB1362 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"00EB1362\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4184936155402170\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"56\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #46B8B343 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"46B8B343\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 3138,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4128899005961952\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"089\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2A38F94B - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2A38F94B\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720211064562471\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"684\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2038AC53 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2038AC53\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 8200,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4210949252975251\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"098\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #52C0284C - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"52C0284C\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 3400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4952137135448397\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"140\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #233DABB9 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"233DABB9\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4568629066023229\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"198\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #157A6F12 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"157A6F12\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5100008591175402\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"905\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1590C7A5 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1590C7A5\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4670828368333394\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"727\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4164A1AD - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4164A1AD\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"808909621278157\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"454\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #65F6CBB6 - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"65F6CBB6\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221603331489401\",\n    \"creditCardExpiry\": \"11/17\",\n    \"cvv\": \"879\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #002555FF - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"002555FF\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5319312457325722\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"91205\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6154A37B - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6154A37B\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2454,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5108019610056210\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"472\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #43470F30 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"43470F30\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4725546556907127\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"507\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7DF612AD - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7DF612AD\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 8000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5303081936259814\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"422\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #07A363FD - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"07A363FD\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 3600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5426941473633212\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"899\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #13038C62 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"13038C62\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 1500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720300380501675\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"285\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #451D3542 - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"451D3542\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221904926685878\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"063\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #31F4AFA6 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"31F4AFA6\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4194540484075349\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"071\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7B455A4E - Expect INVALID/CARD_NUMBER_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CARD_NUMBER_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CARD_NUMBER_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7B455A4E\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"66\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"663\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #31B882ED - Expect INVALID/EXPIRY_DATE_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EXPIRY_DATE_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EXPIRY_DATE_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"31B882ED\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221791154972262\",\n    \"creditCardExpiry\": \"14/06\",\n    \"cvv\": \"692\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #13A1C6F3 - Expect INVALID/CVV_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is CVV_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"CVV_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"13A1C6F3\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4350767734077706\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"2991587\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6638E4B4 - Expect INVALID/TOTAL_INCORRECT",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is TOTAL_INCORRECT\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"TOTAL_INCORRECT\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6638E4B4\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2741,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5359539953412684\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"934\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4C4EB889 - Expect INVALID/PIZZA_NOT_DEFINED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_NOT_DEFINED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_NOT_DEFINED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4C4EB889\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 498705280,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"Pizza-Surprise \",\n      \"priceInPence\": 498702880\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4865866890452725\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"047\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0F7C56C6 - Expect INVALID/MAX_PIZZA_COUNT_EXCEEDED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is MAX_PIZZA_COUNT_EXCEEDED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"MAX_PIZZA_COUNT_EXCEEDED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0F7C56C6\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 8200,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4340550868508982\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"988\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6191848E - Expect INVALID/PIZZA_FROM_MULTIPLE_RESTAURANTS",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PIZZA_FROM_MULTIPLE_RESTAURANTS\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PIZZA_FROM_MULTIPLE_RESTAURANTS\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6191848E\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 4000,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    },\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5175690302961723\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"808\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #105C2EA9 - Expect INVALID/RESTAURANT_CLOSED",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is RESTAURANT_CLOSED\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"RESTAURANT_CLOSED\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"105C2EA9\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 1100,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4539156841400270\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"670\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5FF9032A - Expect INVALID/PRICE_FOR_PIZZA_INVALID",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is PRICE_FOR_PIZZA_INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"PRICE_FOR_PIZZA_INVALID\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5FF9032A\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    },\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1500\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5524859791408805\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"288\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #72495131 - Expect INVALID/EMPTY_ORDER",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is INVALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"INVALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is EMPTY_ORDER\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"EMPTY_ORDER\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"72495131\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 100,\n  \"pizzasInOrder\": [],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5363965213082856\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"909\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1F6AEA0A - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1F6AEA0A\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4410930383468885\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"312\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6A04771F - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6A04771F\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4042251521456658\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"533\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #241D2572 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"241D2572\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5220682190361475\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"824\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #00E4A4B5 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"00E4A4B5\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4451080785735687\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"256\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #486EFB4D - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"486EFB4D\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5511427709294967\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"933\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #53D70449 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"53D70449\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5164571115833452\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"832\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5399CB2F - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5399CB2F\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720405818912673\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"149\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5677B687 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5677B687\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5429860111806112\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"247\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #45F4DD79 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"45F4DD79\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4167908890887099\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"727\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0FA6AABA - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0FA6AABA\",\n  \"orderDate\": \"2025-01-21\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720893067140478\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"690\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1BDBC1D7 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1BDBC1D7\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4725172220050960\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"977\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5BF4FBC5 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5BF4FBC5\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4402786851574772\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"526\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5C8DC114 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5C8DC114\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221288751960428\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"265\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #46C913A3 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"46C913A3\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5185355989205541\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"650\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0928F37F - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0928F37F\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4204308361150553\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"915\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #52F6CA68 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"52F6CA68\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4129778597278067\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"227\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6AC8C5D4 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6AC8C5D4\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221545689172925\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"726\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #07040FF3 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"07040FF3\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5502146680781385\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"030\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1F303E02 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1F303E02\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4563870810726700\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"771\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5E20DDAA - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5E20DDAA\",\n  \"orderDate\": \"2025-01-22\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5329884704973460\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"569\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #091523A9 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"091523A9\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5499680368763559\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"576\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5B40AAC4 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5B40AAC4\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4133772035546643\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"074\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5F2BBEC1 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5F2BBEC1\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221574731058999\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"849\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #38F42F8E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"38F42F8E\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5311883383132448\",\n    \"creditCardExpiry\": \"02/25\",\n    \"cvv\": \"673\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2739F02A - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2739F02A\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4941675612528698\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"270\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4BD04160 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4BD04160\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4421541311375196\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"701\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5C2321E6 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5C2321E6\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4149074033742627\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"864\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #17929CA1 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"17929CA1\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4719612441678113\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"377\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #12E4BFDA - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"12E4BFDA\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5223106369532200\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"882\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #36136D71 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"36136D71\",\n  \"orderDate\": \"2025-01-23\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4570140027381306\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"030\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7FAEA494 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7FAEA494\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720598123434225\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"715\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #16B678DB - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"16B678DB\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4086887628661067\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"335\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6AA133C3 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6AA133C3\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4419094947667481\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"186\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4E393FC2 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4E393FC2\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5552122910003303\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"106\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #39523393 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"39523393\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221624831727371\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"457\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #10F2056F - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"10F2056F\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4477978573061572\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"955\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0F170FA7 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0F170FA7\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5572526602999659\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"729\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #09AC9F62 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"09AC9F62\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4062630828398843\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"971\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #37986EB8 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"37986EB8\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4541611990720890\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"035\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #77E75E6E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"77E75E6E\",\n  \"orderDate\": \"2025-01-24\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4693845259931113\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"319\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #05DCBCCB - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"05DCBCCB\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5418619187984184\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"163\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #56A8F304 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"56A8F304\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221680008963389\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"755\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #319BDDDE - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"319BDDDE\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5398627598337425\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"071\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3AC413A7 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3AC413A7\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5344482565822974\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"919\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3A679900 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3A679900\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4622403192409858\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"034\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2B931451 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2B931451\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4811816593554306\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"406\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6040B851 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6040B851\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720797217226857\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"112\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1AE01176 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1AE01176\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5126630910410580\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"081\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #12A6A757 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"12A6A757\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5394078477609654\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"464\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7E469EDC - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7E469EDC\",\n  \"orderDate\": \"2025-01-25\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5572999683117360\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"485\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #204A9A1B - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"204A9A1B\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720599257228086\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"801\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4A7B3972 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4A7B3972\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5375138448031330\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"661\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5EE3A623 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5EE3A623\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5318954783890712\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"067\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1123A505 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1123A505\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221944985236528\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"006\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #77117C67 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"77117C67\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4005386044265643\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"577\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #51FA9546 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"51FA9546\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5160356483904190\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"480\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0EC29AB9 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0EC29AB9\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5206259586258702\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"224\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #49EBE7A7 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"49EBE7A7\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5536270763748556\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"157\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #031A58FA - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"031A58FA\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4820170894773762\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"162\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7A6142B7 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7A6142B7\",\n  \"orderDate\": \"2025-01-26\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4711495752431696\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"759\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #55FE5D17 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"55FE5D17\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5510238880224868\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"450\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #25DC06A3 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"25DC06A3\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5119891860320984\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"814\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #58910B7E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"58910B7E\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720366799213186\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"980\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #18691AB6 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"18691AB6\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4803651119091263\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"265\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #24004F1F - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"24004F1F\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5323388177673603\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"119\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #19A2C85B - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"19A2C85B\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4526495879896180\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"241\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #528770BF - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"528770BF\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4988829367697810\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"492\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1B764C3F - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1B764C3F\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5457020534987693\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"317\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5AD9D0D6 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5AD9D0D6\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4505432284364905\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"102\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3DD95FB4 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3DD95FB4\",\n  \"orderDate\": \"2025-01-27\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4992434691745445\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"745\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4316D8E8 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4316D8E8\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4192833420022307\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"456\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #33B6341D - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"33B6341D\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4616667441272006\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"355\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #451531EC - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"451531EC\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5327387476871146\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"321\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #35F021B7 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"35F021B7\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221578229107481\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"341\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4B319860 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4B319860\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5346195463349787\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"102\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #62B2CC0E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"62B2CC0E\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4968107818221686\",\n    \"creditCardExpiry\": \"02/25\",\n    \"cvv\": \"065\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4BB1ADC7 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4BB1ADC7\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4074222221156089\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"126\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #01472384 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"01472384\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4502564326683521\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"140\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #29EEBE9A - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"29EEBE9A\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4528605385638656\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"224\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #75B0226D - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"75B0226D\",\n  \"orderDate\": \"2025-01-28\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4209784351341482\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"107\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0C8B73FA - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0C8B73FA\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4093432803408793\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"988\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2DAE1F22 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2DAE1F22\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5391532210494108\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"159\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #32026B68 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"32026B68\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5141225197721824\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"601\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3B218703 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3B218703\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5421773618573341\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"779\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0F11C2DD - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0F11C2DD\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720581007072410\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"859\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2E1C5A2A - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2E1C5A2A\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4319985845802636\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"929\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7CE035B0 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7CE035B0\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5187042717385526\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"768\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5ADEBCDE - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5ADEBCDE\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4416494781577908\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"538\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #544B5E42 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"544B5E42\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5102711818603753\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"524\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4A1471F3 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4A1471F3\",\n  \"orderDate\": \"2025-01-29\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4662357641057802\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"958\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #230DF071 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"230DF071\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4510933388880020\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"134\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #26F69F2A - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"26F69F2A\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5154100359357945\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"545\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2C1B0771 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2C1B0771\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4040186371007106\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"851\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #778E4918 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"778E4918\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5311096593559330\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"785\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #17FDA3B9 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"17FDA3B9\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4765327202659318\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"309\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #34AC43C1 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"34AC43C1\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4028366065582392\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"529\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #677C0E2E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"677C0E2E\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4095178397335516\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"382\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5241BBC4 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5241BBC4\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5153178603696731\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"004\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6A764F55 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6A764F55\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720407797358399\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"980\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #568E9DB6 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"568E9DB6\",\n  \"orderDate\": \"2025-01-30\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5233616073301757\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"040\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #45AA8520 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"45AA8520\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5493297196153717\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"892\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2BB763DF - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2BB763DF\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5364866958522602\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"365\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #248D392D - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"248D392D\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4707833512321284\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"571\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #36A2AC67 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"36A2AC67\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5468093064321507\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"242\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0AAA22DE - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0AAA22DE\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5339109234209443\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"533\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #30A4E07F - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"30A4E07F\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720193073724922\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"203\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #67178365 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"67178365\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4123427115381708\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"300\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5C5A9D34 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5C5A9D34\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4480172699065403\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"060\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #055611CC - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"055611CC\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4467663557821785\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"459\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3BB0A9CE - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3BB0A9CE\",\n  \"orderDate\": \"2025-01-31\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4786251494585012\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"934\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #524CC1A1 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"524CC1A1\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5312710697582316\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"537\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #15BB2572 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"15BB2572\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4078673757404911\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"619\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #305ED1E5 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"305ED1E5\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5429994623559883\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"981\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1E60FA00 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1E60FA00\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4947672189049871\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"808\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6CAB9BFC - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6CAB9BFC\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5351250190891957\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"789\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3AFA68A1 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3AFA68A1\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4582634254185568\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"741\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1A872E09 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1A872E09\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720553693588694\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"235\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0D70FC46 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0D70FC46\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4903887610965972\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"197\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7D18E721 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7D18E721\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5523503583659651\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"039\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0D53DA76 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0D53DA76\",\n  \"orderDate\": \"2025-02-01\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5283300435668745\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"287\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2A0E46A8 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2A0E46A8\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5498520066644027\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"648\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #59989B6C - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"59989B6C\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5315680142262037\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"893\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5DA0DD2A - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5DA0DD2A\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5499003965864748\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"886\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3D347208 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3D347208\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4036614203655186\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"209\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7828506E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7828506E\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5271384912153631\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"188\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #152B9B13 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"152B9B13\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5320470334085815\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"433\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #00428DFE - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"00428DFE\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4584969377457785\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"288\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #604C66CB - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"604C66CB\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4040960813067831\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"942\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7A589FB7 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7A589FB7\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4436569217096726\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"188\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #62CFDF57 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"62CFDF57\",\n  \"orderDate\": \"2025-02-02\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4033644147207151\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"238\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5E607C78 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5E607C78\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4663233892320190\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"822\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #31C51849 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"31C51849\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4658408933819064\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"777\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #66C7FD8E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"66C7FD8E\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4422546291264632\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"393\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #700BFA11 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"700BFA11\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5109065956095998\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"672\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #30AA3920 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"30AA3920\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4859374345332806\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"315\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2D4554E6 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2D4554E6\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4066065546013026\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"109\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6B84B0FB - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6B84B0FB\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720578701055162\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"137\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5F0E4B34 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5F0E4B34\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4083466024895976\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"770\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #07C54B61 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"07C54B61\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5209022329145611\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"939\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7C966FF7 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7C966FF7\",\n  \"orderDate\": \"2025-02-03\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221469826387355\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"671\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4DC93F5C - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4DC93F5C\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720209430827057\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"852\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #79651746 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"79651746\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5291122950768712\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"154\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #358E033E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"358E033E\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5555258856106903\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"297\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1324A09C - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1324A09C\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4948861543551875\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"837\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #369C77AC - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"369C77AC\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5313652084669372\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"536\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #16F0937D - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"16F0937D\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720904540277488\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"232\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #200B609E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"200B609E\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4814861987054692\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"538\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #07BB164C - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"07BB164C\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4338609904076851\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"513\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #40EE1F85 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"40EE1F85\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4990001278962255\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"779\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #567C2D53 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"567C2D53\",\n  \"orderDate\": \"2025-02-04\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4215820234760589\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"132\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #284DD384 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"284DD384\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4173037611621009\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"055\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5CC6547D - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5CC6547D\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720464169840686\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"248\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #32EC1CB1 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"32EC1CB1\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4148681397946288\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"701\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #320E2AB5 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"320E2AB5\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720233588173304\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"726\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #26EFC8C3 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"26EFC8C3\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221988909194727\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"702\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #63EAD8BE - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"63EAD8BE\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5220857778862884\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"047\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #45733C15 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"45733C15\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4734097808143276\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"811\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #31A949A6 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"31A949A6\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5468578089672439\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"976\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4C7B841C - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4C7B841C\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5585430356289760\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"879\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #213BD343 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"213BD343\",\n  \"orderDate\": \"2025-02-05\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4167370547753242\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"234\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4CA96632 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4CA96632\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221872287268883\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"497\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #72179312 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"72179312\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4164985808261826\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"379\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #289DB96B - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"289DB96B\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4225417894089009\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"478\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4908B2C4 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4908B2C4\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720863876383478\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"140\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #54B63B3B - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"54B63B3B\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5289902681565253\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"226\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #42CE4092 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"42CE4092\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5327941432862357\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"963\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #24CC15DD - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"24CC15DD\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4530621941533923\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"395\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #413F8A80 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"413F8A80\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4195848548062958\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"603\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7E789EF1 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7E789EF1\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4202655111717970\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"544\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #025CF1BD - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"025CF1BD\",\n  \"orderDate\": \"2025-02-06\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4833385972837777\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"229\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #130DB6F2 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"130DB6F2\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5468927582223655\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"431\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3BFCCA46 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3BFCCA46\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5353640471216429\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"073\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1D58B011 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1D58B011\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5250572409731761\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"238\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4045E3E0 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4045E3E0\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5199315574948511\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"720\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #45BFCCFA - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"45BFCCFA\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4413924750838751\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"394\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #14487707 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"14487707\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4127315169153923\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"851\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4C551CAC - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4C551CAC\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5105403555783587\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"181\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5E1EF8A3 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5E1EF8A3\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4091092320011660\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"933\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #02FA3BBB - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"02FA3BBB\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4442028559052575\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"978\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #11874205 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"11874205\",\n  \"orderDate\": \"2025-02-07\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720389875249569\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"175\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0578E8F3 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0578E8F3\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5152524122704897\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"702\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #047962DA - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"047962DA\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4184747499294417\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"820\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #45301C72 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"45301C72\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4058922148539552\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"351\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #06D3ED2B - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"06D3ED2B\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4867269804310410\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"566\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0C77464A - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0C77464A\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4769481938617920\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"738\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5683CD7D - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5683CD7D\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720630356591767\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"277\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #653C82F2 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"653C82F2\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5419350733007044\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"796\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #606CCD51 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"606CCD51\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5281712382678521\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"660\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4A9E459F - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4A9E459F\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5297424758232659\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"226\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #44CBD86B - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"44CBD86B\",\n  \"orderDate\": \"2025-02-08\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4381123607225043\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"809\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4E5EC22D - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4E5EC22D\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221675815821671\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"684\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #206B68C8 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"206B68C8\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221559753254618\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"559\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5A61B0D0 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5A61B0D0\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4732142456730768\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"194\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #79877946 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"79877946\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5443525575154588\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"415\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6A646869 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6A646869\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221280104416042\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"280\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6204BD34 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6204BD34\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5528633431576792\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"407\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #69338ECB - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"69338ECB\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4008126344511727\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"267\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6CEF19E4 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6CEF19E4\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5366683286497797\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"409\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5596CC58 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5596CC58\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720455869937582\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"826\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4CE96B68 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4CE96B68\",\n  \"orderDate\": \"2025-02-09\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4426138564301337\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"007\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4F81F14E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4F81F14E\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5130671295086276\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"101\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4389C8BB - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4389C8BB\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5573780384933795\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"254\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1B2CFA87 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1B2CFA87\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221561511626657\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"399\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #67472605 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"67472605\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221604373696457\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"993\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7E1CA2DC - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7E1CA2DC\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720509977792824\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"072\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #65928F8A - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"65928F8A\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5411634628042200\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"317\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1F53E9E9 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1F53E9E9\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5186776816244263\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"390\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #598ABF8C - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"598ABF8C\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5561271645024719\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"398\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3192AAF9 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3192AAF9\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4396165325338643\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"047\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #615AE475 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"615AE475\",\n  \"orderDate\": \"2025-02-10\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221473380617041\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"754\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1044CDF6 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1044CDF6\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4710742798651535\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"044\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2BD023F7 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2BD023F7\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720683817932310\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"920\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2F53A72C - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2F53A72C\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5274760557634067\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"237\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #411878B0 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"411878B0\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4294792508328753\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"016\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7F361BFA - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7F361BFA\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4788602825922423\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"904\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #612C89C2 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"612C89C2\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5540534172282794\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"961\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5F4474D6 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5F4474D6\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4175740377677325\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"751\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2E40139D - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2E40139D\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4518542294415433\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"025\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #18E56945 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"18E56945\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5540968940525342\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"933\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5513434E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5513434E\",\n  \"orderDate\": \"2025-02-11\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5399173895739202\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"576\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #05F5544A - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"05F5544A\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5119746410366020\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"659\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #23AA362E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"23AA362E\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4640967670088093\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"056\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2C4796D4 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2C4796D4\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4551224095982873\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"893\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #229A94E8 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"229A94E8\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4731664680468619\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"557\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1B4A69C5 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1B4A69C5\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4986106716770917\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"725\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1FA0AC17 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1FA0AC17\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4315484767439118\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"982\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #54590C2D - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"54590C2D\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5438461512745600\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"540\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #05D8A088 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"05D8A088\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5506074452945119\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"905\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #06F40B6D - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"06F40B6D\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4546065235457682\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"765\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1558B55C - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1558B55C\",\n  \"orderDate\": \"2025-02-12\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4628966101847198\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"607\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0F81F270 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0F81F270\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4764217311286213\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"438\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #342138BD - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"342138BD\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4481373032297286\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"478\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #57FC2D94 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"57FC2D94\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720895963144595\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"772\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #139DA730 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"139DA730\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5516728103376135\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"141\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #548B0F7C - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"548B0F7C\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4747717774371081\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"638\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #60E9B1BD - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"60E9B1BD\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720837419183256\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"317\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #154B83CD - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"154B83CD\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4229405382688529\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"610\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #442F7DE2 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"442F7DE2\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5277355226472903\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"724\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2214B08E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2214B08E\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4419863099064584\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"478\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1F74F6A2 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1F74F6A2\",\n  \"orderDate\": \"2025-02-13\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4831207048120958\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"114\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #14F0DA28 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"14F0DA28\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4991623459522183\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"884\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4D663BED - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4D663BED\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221512923805694\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"697\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5D513866 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5D513866\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5319009760288346\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"762\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #39C2B5E3 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"39C2B5E3\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4926618123763379\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"942\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #62825801 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"62825801\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4261749955643984\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"915\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4D2D2145 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4D2D2145\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720874742855516\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"068\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3CF66C99 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3CF66C99\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4349351162794480\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"074\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #69AE9DF3 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"69AE9DF3\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4515181780908560\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"808\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #74498110 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"74498110\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4984617889180868\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"382\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #586D5C4B - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"586D5C4B\",\n  \"orderDate\": \"2025-02-14\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5257601263605655\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"009\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7334784F - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7334784F\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4911105210314131\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"645\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #172D7990 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"172D7990\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4550148222471255\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"723\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #46A3665F - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"46A3665F\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4475973831520982\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"348\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #01DEA14C - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"01DEA14C\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720189490523103\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"262\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3C865D30 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3C865D30\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5476502812529997\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"998\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3513C790 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3513C790\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720825562024369\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"641\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #30298B43 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"30298B43\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4563929002712389\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"938\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #113D3B0B - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"113D3B0B\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4691478348636170\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"363\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3FC5A7E0 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3FC5A7E0\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5472451495537741\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"601\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4F85038D - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4F85038D\",\n  \"orderDate\": \"2025-02-15\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4994659332501645\",\n    \"creditCardExpiry\": \"11/25\",\n    \"cvv\": \"934\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #590A0373 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"590A0373\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5111797242125751\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"603\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3BC3E62F - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3BC3E62F\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4126149660059516\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"176\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #622F88E7 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"622F88E7\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4227665704743011\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"088\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6D0D823F - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6D0D823F\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5366069028359885\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"595\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #184EE274 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"184EE274\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5443337085562122\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"168\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #6588A217 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"6588A217\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720760391019852\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"640\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4F2093E8 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4F2093E8\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5462969930983370\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"812\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0F8AA428 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0F8AA428\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4949680400296989\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"004\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #64217C2E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"64217C2E\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5153827291764710\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"613\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5CB28EAF - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5CB28EAF\",\n  \"orderDate\": \"2025-02-16\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4608696746304313\",\n    \"creditCardExpiry\": \"07/25\",\n    \"cvv\": \"295\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4AD033B8 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4AD033B8\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4908133862887001\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"324\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #42DF3AFE - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"42DF3AFE\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5435497866643713\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"063\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #2C9EF95C - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"2C9EF95C\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5187356838996353\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"388\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #07EDDE17 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"07EDDE17\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5546390555165591\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"388\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5D8C0896 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5D8C0896\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4216203484970811\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"303\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1F8364FC - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1F8364FC\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4182064466366398\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"057\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #19CD3193 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"19CD3193\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R5: Pizza Dream\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R5: My kind of pizza\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4605757803329073\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"439\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #747A89DB - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"747A89DB\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4855002008380804\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"921\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #35062AB3 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"35062AB3\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4208077471721662\",\n    \"creditCardExpiry\": \"03/26\",\n    \"cvv\": \"551\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #0B16D3D3 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"0B16D3D3\",\n  \"orderDate\": \"2025-02-17\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5395008893711312\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"472\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #1864072F - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"1864072F\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4855319766723391\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"389\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #098E2159 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"098E2159\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720844028866776\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"686\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #741BBE2E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"741BBE2E\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5258136529461535\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"828\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #5DEC8180 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"5DEC8180\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5240893253188376\",\n    \"creditCardExpiry\": \"10/25\",\n    \"cvv\": \"911\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #02534839 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"02534839\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4688118882634232\",\n    \"creditCardExpiry\": \"08/25\",\n    \"cvv\": \"066\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4EDCBB6E - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4EDCBB6E\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2500,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R1: Margarita\",\n      \"priceInPence\": 1000\n    },\n    {\n      \"name\": \"R1: Calzone\",\n      \"priceInPence\": 1400\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5597136125775155\",\n    \"creditCardExpiry\": \"04/26\",\n    \"cvv\": \"441\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7E204EED - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7E204EED\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221129170022293\",\n    \"creditCardExpiry\": \"09/25\",\n    \"cvv\": \"831\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #16B7206A - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"16B7206A\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4961010094053442\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"771\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #3A30A7D5 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"3A30A7D5\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5264256803587623\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"580\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #58015FBF - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"58015FBF\",\n  \"orderDate\": \"2025-02-18\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R7: Hot, hotter, the hottest\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R7: All you ever wanted\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5492927698702790\",\n    \"creditCardExpiry\": \"06/25\",\n    \"cvv\": \"993\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #40F1FC61 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"40F1FC61\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5290154049995551\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"144\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #35904951 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"35904951\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4964891105194003\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"432\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #408E8A32 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"408E8A32\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4242453008241938\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"198\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #4B02B719 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"4B02B719\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2720799919675258\",\n    \"creditCardExpiry\": \"03/25\",\n    \"cvv\": \"641\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #44F87A28 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"44F87A28\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"2221448150035384\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"985\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #201A2DE9 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"201A2DE9\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5100637010125240\",\n    \"creditCardExpiry\": \"02/26\",\n    \"cvv\": \"177\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #7E989C98 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"7E989C98\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R4: Proper Pizza\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R4: Pineapple & Ham & Cheese\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4456844420470280\",\n    \"creditCardExpiry\": \"01/26\",\n    \"cvv\": \"494\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #57135761 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"57135761\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R6: Sucuk delight\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R6: Dreams of Syria\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4472850103585294\",\n    \"creditCardExpiry\": \"04/25\",\n    \"cvv\": \"575\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #32BA64F4 - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"32BA64F4\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2600,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R2: Meat Lover\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R2: Vegan Delight\",\n      \"priceInPence\": 1100\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"5428105293996880\",\n    \"creditCardExpiry\": \"05/25\",\n    \"cvv\": \"224\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      },
      {
        "name": "Order #35B7A72A - Expect VALID/NO_ERROR",
        "event": [
          {
            "listen": "test",
            "script": {
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Order status is VALID\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderStatus).to.eql(\"VALID\");",
                "});",
                "",
                "pm.test(\"Order validation Code is NO_ERROR\", () => {",
                "    const jsonData = pm.response.json();",
                "    pm.expect(jsonData.orderValidationCode).to.eql(\"NO_ERROR\");",
                "});"
              ]
            }
          }
        ],
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n  \"orderNo\": \"35B7A72A\",\n  \"orderDate\": \"2025-02-19\",\n  \"priceTotalInPence\": 2400,\n  \"pizzasInOrder\": [\n    {\n      \"name\": \"R3: Super Cheese\",\n      \"priceInPence\": 1400\n    },\n    {\n      \"name\": \"R3: All Shrooms\",\n      \"priceInPence\": 900\n    }\n  ],\n  \"creditCardInformation\": {\n    \"creditCardNumber\": \"4538311774327674\",\n    \"creditCardExpiry\": \"12/25\",\n    \"cvv\": \"017\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:8080/validateOrder",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "8080",
            "path": [
              "validateOrder"
            ]
          }
        }
      }
    ]
  }